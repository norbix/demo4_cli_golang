---
version: 3

silent: true

output: 'interleaved'

vars:
  # HINT: global variables
  VENDOR: '{{ .NORBIX_VENDOR | default "replace" }}'
  APP_NAME: '{{ .NORBIX_APP_NAME | default "golang_example_cli_app" }}'
  GIT_COMMIT:
    sh: git log -n 1 --format=%h

tasks:
  ## HINT: Sinle Responsibility
  compile:windows:
    desc: Compiling binary for the {{OS}} platform
    cmds:
      -
        # HINT: Closure ( syntactic sugar )
        vars: {platform: windows}
        task: helper:banner
      -
        vars: {platform: windows}
        task: helper:compiler

  # HINT: Private Functions Shared (Class Helper)
  ## HINT: Single Responsibility
  helper:banner:
    cmds:
      - echo Compiling for {{.platform | title }} platform
    vars:
      platform: '{{.platform}}'

  helper:compiler:
    cmds:
      - GOOS={{.platform}} go build -o ./bin/{{.VENDOR}}-{{.APP_NAME}}-{{.GIT_COMMIT}}-{{.platform}}.bin ./cmd/api/main.go
    vars:
      platform: '{{.platform}}'

  # HINT: Public Functions (Class Test)
  ## HINT: Composition
  test:all:
    desc: Running entire test suite [static, unit, integration, e2e]
    cmds:
      - task: test:helper:static
      - task: test:helper:unit

  # HINT: Private Functions (Class Test)
  ## HINT: Single Responsibility
  test:helper:static:
    cmds:
      - echo Running static tests suite...
      - task: test:helper:static:go
      - task: test:helper:static:yaml
      - task: test:helper:static:md

  test:helper:static:go:
    desc: Running static test suite for Go source files
    cmds:
      - echo Running static tests for Go source files...
      - docker run --rm -v '{{.pwd_prefix}}':/app -v ~/.cache/golangci-lint/${golangci_lint_version}:/root/.cache -w /app golangci/golangci-lint:{{.golangci_lint_version}} golangci-lint run -c .golangci.yml -v
    #     Hint: debug
    #      - docker run -it --rm -v '{{.pwd_prefix}}':/app -v ~/.cache/golangci-lint/${golangci_lint_version}:/root/.cache -w /app golangci/golangci-lint:{{.golangci_lint_version}} bash
    vars:
      golangci_lint_version: v1.42.1
      # NOTE: hack
      ## TODO: generalize
      pwd_prefix: '{{.PWD_PREFIX}}'

  test:helper:static:yaml:
    desc: Running static test suite for YAML source files
    cmds:
      - echo Running static tests for YAML source files...
      - docker run --rm -v '{{.pwd_prefix}}':/app -w /app ubuntu:22.04 sh -c "apt-get update ; apt-get -y install pip ; pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org yamllint ; yamllint -c ./yamllint.config ./"
    #      Hint: debug
    #      - docker run -it --rm -v '{{.pwd_prefix}}':/app -w /app ubuntu:22.04 bash
    vars:
      # NOTE: hack
      ## TODO: generalize
      pwd_prefix: '{{.PWD_PREFIX}}'

  test:helper:static:md:
    desc: Running static test suite Markdown source files
    cmds:
      - echo Running static tests for Markdown source files...
      # TODO: solve issues
      - docker run --rm -v '{{.pwd_prefix}}':/app -w /app ubuntu:22.04 sh -c "apt-get update ; apt-get -y install git rake ; cd /tmp ; git clone https://github.com/markdownlint/markdownlint ; cd markdownlint ; rake install ; cd /app ; mdl *.md"
    vars:
      # NOTE: hack
      ## TODO: generalize
      pwd_prefix: '{{.PWD_PREFIX}}'

  test:helper:unit:
    desc: Running unit test suite
    cmds:
      - echo Running unit tests suite...
      - go clean -testcache
      - go test -v ./...
      - echo true
